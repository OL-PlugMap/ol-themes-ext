{"version":3,"file":"Core.js","sources":["../src/Core.js"],"sourcesContent":["import WKT from \"ol/format/WKT\";\nimport { transform } from \"ol/proj\";\n\n\nexport default class Core {\n  constructor(ele) {\n    \n    this.map = ele;\n\n    this._plugins = [];\n    this.subs = [];\n    this.triggers = {};\n    this.hooks = {\n    };\n\n    this.el = {\n      itms: [],\n      childrens: [],\n      append: function(itm) {\n        this.itms.push(itm);\n      },\n      appendChild: function(child) {\n        this.childrens.push(child);\n      }\n    };\n    this.services = {};\n  }\n\n  receiveMessage(event) {\n    if(event.data && event.data.destination == \"map\")\n    {\n      if(event.data.cmd)\n      {\n        if(this.subs[event.data.cmd])\n          this.subs[event.data.cmd](event.data.data);\n        \n      }\n    }\n  }\n\n  init(config, elm, options) {\n    //Add Map\n\n    this.config = config;\n    this.options = options || {\n      target: \"ol-map\",\n      center: [-12350000.17245, 4705131.1812],\n      zoom: 7,\n      maxZoom: 30,\n      minZoom: 3\n    };\n\n    this.elm = elm;\n\n    this._initPortSubs();\n\n    \n    if(!this.data)\n      this.data = { }\n\n    if(!this.data.map)\n      this.data.map = this.map;\n    \n\n    window.addEventListener(\"message\", this.receiveMessage.bind(this), false);\n    window.mapMsg = this.receiveMessage\n    \n\n    var map = this.getMap();\n\n    if(map)\n    {\n      map.getView().on(\"change\", evt =>\n        {\n          var extent = map.getView().calculateExtent(map.getSize());\n          var center = map.getView().getCenter();\n\n\n          center = transform(center, \"EPSG:3857\", \"EPSG:4326\")\n          var extent_1 = transform([extent[0],extent[1]], \"EPSG:3857\", \"EPSG:4326\")\n          var extent_2 = transform([extent[2],extent[3]], \"EPSG:3857\", \"EPSG:4326\")\n\n          var res =\n            { xmin : extent_1[0]\n            , ymin : extent_1[1]\n            , xmax : extent_2[0]\n            , ymax : extent_2[1]\n            , center : \n              { x : center[0]\n              , y : center[1]\n              }\n            }\n\n          \n          //this.emit(\"extentUpdated\", res);\n        }\n      )\n    }\n    //extentUpdated\n\n    var that = this;\n    setTimeout(() => {\n      //that.emit(\"mapReady\");\n    }, 700 );\n\n  }\n\n  refresh() {\n    ;\n    let layers = this.getMap().getLayers();\n\n    for (let layer of layers.array_) {\n      this.recursiveRefresh(layer);\n    }\n  }\n\n  recursiveRefresh(layer, depth) {\n    if (depth == undefined) depth = 5;\n\n    if (depth < 0) \n    { ;\n      return;\n    }\n\n    if (layer.getLayers) {\n      for (let layersub of layer.getLayers().array_) {\n        this.recursiveRefresh(layersub, depth - 1);\n      }\n    } else if (layer.get(\"visible\"))\n    { if(layer.getSource) {\n        var src = layer.getSource();\n        if(src.tileCache)\n          {\n            src.tileCache.clear();\n          }\n        if(src.refreshFunction)\n        {\n          src.refreshFunction();\n        }\n        else\n        {\n          src.changed();\n        }\n      } else debugger;\n    }\n  }\n\n  setServices(services) {\n    this.services = {};\n    for (let service of services) {\n      this.services[service.key] = service;\n    }\n  }\n\n  fitToWkt(data) {\n    let wkt = data.wkt;\n    var leftPadding = data.left;\n    var bottomPadding = data.bottom;\n\n    let format = new WKT();\n    let feature = format.readFeature(wkt);\n    let extent = feature.getGeometry().getExtent();\n\n    let pudding = [ 50, 50, 50, 50 + leftPadding];\n    this.data.view.cancelAnimations();\n    \n    this.data.view.fit(extent, {\n      size: this.data.map.getSize(),\n      duration: 1000,\n      padding: pudding\n    });\n  }\n\n  fitToPointZoom(data)\n  {\n    this.data.map.getView().animate(\n      { zoom : data.zoom\n      , center : [ data.x, data.y ]\n      //, duration: 100\n      }\n    );\n  }\n  \n  _initPortSubs() {}\n\n\n  render() {}\n\n  register(plugins) {\n    for (let pluginWithOptions of plugins) {\n      \n      let [plugin, options] = pluginWithOptions;\n      this.initPlugin(plugin, options);\n    }\n  }\n\n  initPlugin(Plugin, options) {\n    let plugin = new Plugin();\n    this._plugins.push(plugin);\n    this.applyToPlugin(plugin, options);\n    this.renderPlugin(plugin);\n  }\n\n  applyToPlugin(plugin, options) {\n    plugin.apply(this, options);\n  }\n  renderPlugin(plugin) {\n    // plugins create an element and embed the elm object in it and then returns that element\n\n    if (typeof plugin !== \"undefined\") {\n      let el = plugin.render();\n      if (this.el instanceof Element || this.el instanceof HTMLDocument) {\n        this.el.append(plugin.render() || \"\");\n      }\n    }\n  }\n\n  // Stuff related to changing layers and extends plugins can hook to this and run these functions\n  _changeLayer(layer) {\n  }\n  zoomToExtent(extent) {\n    this.data.map.getView().fit(extent, {\n      size: this.data.map.getSize(),\n      duration: 1000\n    });\n  }\n\n  addShape(featureId) {\n    this.hooks.newMessage.call(featureId);\n  }\n\n  on(name, f) {\n    if (!this.triggers[name]) {\n      this.triggers[name] = [];\n    }\n\n    this.triggers[name].push(f);\n  }\n\n  processTrigger(name, value) {\n    if (this.triggers[name]) for (let fn of this.triggers[name]) fn(value);\n  }\n  \n\n  getMap() {\n    if (this.data) return this.data.map;\n    return null;\n  }\n}\n"],"names":[],"mappings":"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"}