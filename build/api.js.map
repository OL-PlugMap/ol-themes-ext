{"version":3,"file":"api.js","sources":["../src/api.js"],"sourcesContent":["import Core from \"./Core\"\nimport Themes from \"./map-layer-helper\";\n\nimport { isConfig, convertConfig } from \"./Config\"\nimport { getLogger } from \"./logger\";\n\nexport default class ol_themes_ext {\n    constructor(map) {\n\n        this.map = map;\n        \n        this.core = new Core(map);\n\n        this.core.init({},{ ports: {} });\n\n        map.themes = this;\n\n        this.crossfadeHooks = [];\n        this.crossfadespeed = 50; // 1/20th of a second\n        \n        return map;\n    }\n\n    initThemes() {\n        if(!this.themes)\n        {\n            this.themes = new Themes();\n            this.themes.apply(this.core);\n        }\n    }\n\n\n    initLayers(layers) {\n        this.initThemes()\n\n        var olLayers = this.themes.addLayers(layers)\n\n        return olLayers;\n    }\n\n    initGroups(groups) {\n        this.initThemes()\n\n        var olLayers = this.themes.addGroups(layers)\n\n        return olLayers;\n    }\n\n    initMapHooks() {\n        this.map.on('moveend', this.processExtentChanged.bind(this));        \n    }\n\n    processExtentChanged(evt) {\n        getLogger(\"ol-themes-ext Extent changed\", evt);\n\n        let newZoom = this.map.getView().getZoom();\n        \n        if(this.oldZoom != newZoom)\n        {\n            if(this.crossfadeHooks.length > 0)\n                this.crossfade();\n        }\n    }\n\n    crossfade() {\n        getLogger(\"Crossfade\");\n\n        // If theres another crossfade running, stop it\n        if(this.crossfadeTimeoutId) {\n            clearTimeout(this.crossfadeTimeoutId);\n            this.crossfadeTimeoutId = null;\n        }\n\n        let anyCrossfadeStepped = false;\n\n        // Step all crossfade hooks\n        this.crossfadeHooks.forEach(category => {\n            anyCrossfadeStepped = this.crossfadeStep(category, this.crossfadespeed) || anyCrossfadeStepped;\n        });\n\n        // If any crossfade steps were taken, then we need to schedule another step otherwise we're done\n        if(anyCrossfadeStepped)\n        {\n            this.crossfadeTimeoutId = setTimeout(this.crossfade.bind(this), this.crossfadespeed);\n        }\n    }\n\n\n    getTargetOpacityForCrossfade(category)\n    {\n        let crossfadeConfig = category.crossfade;\n        let curZoom = this.map.getView().getZoom();\n\n        let targetOpacity = ((curZoom - crossfadeConfig.startZoom) / (crossfadeConfig.endZoom - crossfadeConfig.startZoom));\n\n        if(targetOpacity < 0)\n            targetOpacity = 0;\n        else if(targetOpacity > 1)\n            targetOpacity = 1;\n        \n        return targetOpacity;\n    }\n\n    crossfadeStep(category, deltaTime) {\n        getLogger(\"Crossfade step\", category, deltaTime);\n\n        let crossfadeConfig = category.crossfade;\n        let targetOpacity = this.getTargetOpacityForCrossfade(category);\n        let opacityPerStep = 1/(crossfadeConfig.endZoom - crossfadeConfig.startZoom)\n        let curentOpacity = this.getCategoryByKey(category.category_key).getLayerByKey(crossfadeConfig.to).getOpacity();\n\n        getLogger(\"Target opacity\", targetOpacity, \"Current opacity\", curentOpacity, \"Opacity per step\", opacityPerStep);\n        \n        if(targetOpacity == curentOpacity)\n            return false;\n\n        let delta = (targetOpacity - curentOpacity);\n\n        let stepOpacity = curentOpacity;\n\n        if(Math.abs(delta) < 0.01)\n        {\n            stepOpacity = targetOpacity;\n        }\n        else\n        {\n            stepOpacity += ( deltaTime / ( crossfadeConfig.duration * 1000 ) ) * (delta < 0 ? -1 : 1) * opacityPerStep;\n        }\n\n        if(stepOpacity < 0)\n            stepOpacity = 0;\n        else if(stepOpacity > 1)\n            stepOpacity = 1;\n\n\n            getLogger(\"Step opacity\", stepOpacity);\n\n        this.getCategoryByKey(category.category_key).getLayerByKey(crossfadeConfig.to).setOpacity(stepOpacity);\n        this.getCategoryByKey(category.category_key).getLayerByKey(crossfadeConfig.to).setVisible(stepOpacity > 0);\n\n        this.getCategoryByKey(category.category_key).getLayerByKey(crossfadeConfig.from).setOpacity(1-stepOpacity);\n        this.getCategoryByKey(category.category_key).getLayerByKey(crossfadeConfig.from).setVisible(stepOpacity < 1);\n        \n        return true;\n    }\n    \n\n    initCategories(config, withConfig) {\n        console.log(\"Init categories\")\n        getLogger()(\"Setting up\", config);\n        if(isConfig(config))\n        {\n            config = convertConfig(config);\n        }\n\n        this.initThemes()\n\n        var olCategories = this.themes.addLayerCategories(config);\n\n        this.categories = olCategories;\n\n        config.forEach(category => {\n            if(category.crossfade) {\n                this.crossfadeHooks.push(category);\n            }\n        });\n\n        getLogger(\"Crossfade hooks\", this.crossfadeHooks);\n\n        if(this.crossfadeHooks.length > 0)\n        {\n            this.initMapHooks();\n        }\n\n        if(!withConfig)\n            return olCategories;\n        else\n            return { categories: olCategories, config: config };\n    }\n\n    getCategoryByKey(key) {\n        let matching = this.categories.filter(cat => {\n            return cat.metadata.key === key;\n        });\n\n        if(matching)\n            return matching[0];\n    }\n\n    getCategories() {\n        return this.categories;\n    }\n\n    async getFeaturesInView() {\n        let all = [];\n        for(let category of this.categories) {\n            if(category.getFeaturesInView)\n            {\n                let catF = category.getFeaturesInView();\n                if(catF && catF.length > 0) {\n                    all = all.concat(catF);\n                }\n            }\n        }\n        let every = await Promise.all(all);\n        return every.flat();\n    }\n\n    \n}\n\nexport function extendWithThemes(map) {\n    return new ol_themes_ext(map);\n}"],"names":["layers"],"mappings":"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"}