{"version":3,"file":"esriFeature.js","sources":["../src/esriFeature.js"],"sourcesContent":["import TileGrid from \"ol/tilegrid/TileGrid\"\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport {createXYZ} from 'ol/tilegrid';\nimport { Fill, Stroke, Style } from 'ol/style';\nimport EsriJSON from 'ol/format/EsriJSON';\nimport { get } from \"ol/proj\";\nimport { getWidth } from \"ol/extent\";\nimport {tile as tileStrategy} from 'ol/loadingstrategy';\nimport { getLogger, getWarning } from \"./logger\";\nimport { createStyleFunction } from 'ol-esri-style-10';\n\n\nconst esrijsonFormat = new EsriJSON();\n\nexport const generate = (data, core) => {\n    let layers = data.config.value.endpoints.map(endpoint => {\n    //The random adds a random value to the parameter\n    //essentually cache busting  \n    let customParams = {\n      get random() {\n        return Math.random();\n      }\n    };\n\n    if (endpoint.bbox) {\n      customParams[\"BBOX\"] = endpoint.bbox;\n    }\n\n    if (endpoint.layersToShow) {\n      customParams[\"LAYERS\"] = endpoint.layersToShow;\n    }\n\n    if (data.config.value.layerDefs) {\n      customParams[\"layerDefs\"] = data.config.value.layerDefs\n    }\n\n    var projExtent = get('EPSG:3857').getExtent();\n    var startResolution = getWidth(projExtent) / 256;\n    var resolutions = new Array(22);\n    for (var i = 0, ii = resolutions.length; i < ii; ++i) {\n      resolutions[i] = startResolution / Math.pow(2, i);\n    }\n    var tileGrid = new TileGrid({\n      extent: [-13884991, 2870341, -7455066, 6338219],\n      resolutions: resolutions,\n      tileSize: [256, 256]\n    });\n\n\n    endpoint.styleCache = {};\n    endpoint.styleFunction = function(feature)\n    {\n      if(!endpoint.styleCache)\n      {\n        return new Style({\n          fill: new Fill({\n            color: \"rgba(255,0,0,0.5)\"\n          }),\n          stroke: new Stroke({\n            color: \"rgba(255,0,255,0.75)\",\n            width: 4\n          })\n        })\n      }\n      else\n      {\n        if(feature.get(endpoint.styleCache.field))\n        {\n          if(endpoint.styleCache.map[feature.get(endpoint.styleCache.field)])\n          {\n            return endpoint.styleCache.map[feature.get(endpoint.styleCache.field)];\n          }\n          else\n          {\n            getLogger()(\"Cant find mapped value for \" + feature.get(endpoint.styleCache.field))\n            return new Style({\n              fill: new Fill({\n                color: \"rgba(255,0,0,0.5)\"\n              }),\n              stroke: new Stroke({\n                color: \"rgba(255,0,255,0.75)\",\n                width: 4\n              })\n            })\n          }\n        }\n      }\n    }\n\n    if(!endpoint.style) {\n      window.fetch(endpoint.url + \"?f=json\")\n      .then(resp => { return resp.json() } )\n      .then(meta => {\n        try\n        {\n          getLogger()(\"Style\", meta);\n          console.log(\"Metadata\", meta);\n          //setMapProjection(core.getMap().getView().getProjection());\n          createStyleFunction(meta).then(styleFunction => {\n            getLogger()(\"Debug stuff here\");\n            endpoint.styleFunction = (feature, resolution) => {\n              getLogger()(feature);\n              return styleFunction(feature, resolution);\n            }\n\n            getLogger()(\"Setting FN\");\n            endpoint.layerRef.setStyle(endpoint.styleFunction);\n          })\n          .catch((err) => {\n            getLogger()(\"Catch\", err);\n            endpoint.styleFunction = (feature) => {\n              return new Style({\n                fill: new Fill({\n                  color: \"rgba(255,0,0,0.5)\"\n                }),\n                stroke: new Stroke({\n                  color: \"rgba(255,0,255,0.75)\",\n                  width: 4\n                })\n              })\n            };\n\n            getLogger()(\"Setting FN\");\n            endpoint.layerRef.setStyle(endpoint.styleFunction);\n          })\n        }\n        catch(ex)\n        {\n          getLogger()(\"Exception\", ex);\n          endpoint.styleFunction = (feature) => {\n            return new Style({\n              fill: new Fill({\n                color: \"rgba(255,0,0,0.5)\"\n              }),\n              stroke: new Stroke({\n                color: \"rgba(255,0,255,0.75)\",\n                width: 4\n              })\n            })\n          };\n\n          getLogger()(\"Setting FN\");\n          endpoint.layerRef.setStyle(endpoint.styleFunction);\n        }\n        // var rend = (meta && meta.drawingInfo ? meta.drawingInfo.renderer : {}) || {} ;\n        // if(!rend)\n        // {\n        //   getWarning()(\"The included service didnt have drawing info. This can happen if you dont pass in the layer with the url. For example: somedomain.com/somepath/FeatureServer/0/\");\n        //   endpoint.styleCache = false;\n        //   return;\n        // }\n\n        // let rendererType = rend.type;\n\n        // switch(rendererType)\n        // {\n        //   case \"uniqueValue\": {\n        //     getLogger()(\"Found a unique value renderer\");\n        //     if(rend.field2)\n        //     {\n        //       getWarning()(\"This renderer has multiple fields. Currently only the first field is supported, the rest are ignored. Please open an issue on this library with the following values.\", endpoint, rend);\n        //     }\n        //     var field = rend.field1;\n        //     endpoint.styleCache.field = field;\n        //     endpoint.styleCache.map = {};\n        //     for(var inf of rend.uniqueValueInfos)\n        //     {\n        //       var sym = inf.symbol;\n        //       endpoint.styleCache.map[inf.value] =\n        //         new Style({\n        //           fill: new Fill({\n        //             color: `rgba(${sym.color[0]},${sym.color[1]},${sym.color[2]},${sym.color[3]/255})`\n        //           }),\n        //           stroke: new Stroke({\n        //             color: `rgba(${sym.outline.color[0]},${sym.outline.color[1]},${sym.outline.color[2]},${sym.outline.color[3]/255})`,\n        //             width: sym.outline.width || 4\n        //           })\n        //         })\n        //     }\n        //   }; break;\n\n        //   default: {\n        //     getWarning()(\"Unsupported renderer detected. Please open an issue on this library with the following value.\", endpoint, rend)\n        //   }; break;\n\n        // }\n\n        \n      })\n      .catch(a => {\n          getWarning()(\"Unable to get style from provided URL\", endpoint.url, a. endpoint)\n          endpoint.styleCache = false;\n      });\n    }\n\n    \n\n    let source = new VectorSource({\n      loader: function (extent, resolution, projection) {\n        let outfields = endpoint.outfields ? endpoint.outfields.join(\",\") : \"*\";\n        var url =\n          endpoint.url +\n          '/query/?f=json&' +\n          'returnGeometry=true&spatialRel=esriSpatialRelIntersects&geometry=' +\n          encodeURIComponent(\n            '{\"xmin\":' +\n              extent[0] +\n              ',\"ymin\":' +\n              extent[1] +\n              ',\"xmax\":' +\n              extent[2] +\n              ',\"ymax\":' +\n              extent[3] +\n              ',\"spatialReference\":{\"wkid\":102100}}'\n          ) +\n          '&geometryType=esriGeometryEnvelope&inSR=102100&outFields=' + outfields\n          '&outSR=102100';\n        window.fetch(url)\n        .then((response) => { return response.text() })\n        .then((txt) => {\n              var features = esrijsonFormat.readFeatures(txt, {\n                featureProjection: projection,\n              });\n              if (features.length > 0) {\n                source.addFeatures(features);\n              }\n            //}\n          },\n        )\n        .catch((err) => {\n          getWarning()(\"Unhandled exception in esri feature loader\", err)\n        })\n      },\n      strategy: tileStrategy(\n        createXYZ({\n          tileSize: 512,\n        })\n      ),\n    });\n\n    let style = endpoint.style || {};\n\n    let lyr = new VectorLayer({\n      source: source,\n      zIndex: endpoint.zIndex || 0,\n      opacity: data.opacity || 1,\n      style: endpoint.styleFunction\n    });\n    lyr.set('id', data.key);\n\n    source.applyFilters =\n      function (ls) {\n        if (!Array.isArray(ls) && ls.filts)\n          ls = ls.filts;\n        ls.forEach(layer => {\n\n          var def = {};\n          var conditions = [];\n          layer.values.forEach(value => {\n            if (value.applied && value.filter && value.filter.all && value.filter.all.length > 0) {\n              var indiConds = [];\n              value.filter.all.forEach(condition => {\n\n                if (condition.values.exact) {\n                  indiConds.push(\"( \" + condition.field + \" = '\" + condition.values.exact + \"' )\")\n                } else if (condition.values.range) {\n                  indiConds.push(\"( \" + condition.field + \" > '\" + condition.values.greaterThan + \"' AND \" + condition.field + \" < '\" + condition.values.lessThan + \"')\")\n                }\n\n              })\n\n              var finalCond = \"(\" + indiConds.join(\" AND \") + \")\";\n              conditions.push(finalCond);\n            }\n          });\n\n          var finalFilter = \"\";\n          switch (layer.mode) {\n            case \"OR\": finalFilter = conditions.join(\" OR \"); break;\n            case \"AND\": finalFilter = conditions.join(\" AND \"); break;\n          }\n\n          if (finalFilter.length > 0) {\n            def[layer.layerid] = finalFilter;\n            def = JSON.stringify(def);\n          }\n          else {\n            def = \"\"\n          }\n\n\n          let olddef = source.params_[\"layerDefs\"];\n          let newdef = def;\n\n          this.params_[\"layerDefs\"] = def;\n          if (olddef != newdef) {\n            if (newdef.length > 0) {\n              lyr.setVisible(true);\n              if (this.tileCache) {\n                this.tileCache.clear();\n              }\n              this.changed();\n            }\n            else {\n              lyr.setVisible(false);\n            }\n          }\n        })\n      };\n\n    source.clearFilters =\n      function (layer) {\n        var def = {};\n        def[layer.layerid] = \"0=1\";\n        def = JSON.stringify(def);\n\n        let olddef = source.params_[\"layerDefs\"];\n        let newdef = def;\n\n        this.params_[\"layerDefs\"] = def;\n\n        lyr.setVisible(false);\n\n        if (olddef != newdef) {\n          if (this.tileCache) {\n            this.tileCache.clear();\n          }\n          this.changed();\n        }\n      }\n\n    let configureSource = function (tokenKey) {\n      if (core.services && core.services[tokenKey]) {\n        let tokenData = core.services[tokenKey];\n        source.setUrl(`${tokenData.baseUrl || \"\"}${endpoint.url}`);\n        if (tokenData.token) {\n          customParams[\"token\"] = tokenData.token;\n        }\n        source.params_ = customParams;\n      }\n    }\n\n    // if (endpoint.tokenKey) {\n    //   // if the token data has already been fetched and stored in core.services\n    //   // go ahead and configure the source w/ the data, otherwise, postpone\n    //   // the configuration until `setServicesCmd` has been triggered\n    //   if (core.services && core.services[endpoint.tokenKey]) {\n    //     configureSource(endpoint.tokenKey);\n    //   } else {\n    //     self.pendingConfiguration.push({\n    //       name: data.key,\n    //       fn: configureSource,\n    //       params: [endpoint.tokenKey]\n    //     });\n    //   }\n    // }\n    // else {\n    //   source.setUrl(endpoint.url);\n    //   source.params_ = customParams;\n    // }\n    lyr.setVisible(false);\n    endpoint.layerRef = lyr;\n    return lyr;\n  });\n\n  return layers;\n};\n\n/**\n * Helper class to build configuration objects for the esriFeature generate function.\n *\n * Example usage:\n *   const config = new EsriFeatureConfigBuilder()\n *     .setKey('myLayerGroup')\n *     .setOpacity(0.8)\n *     .setExtent([-13884991, 2870341, -7455066, 6338219])\n *     .addEndpoint({\n *       url: 'https://example.com/arcgis/rest/services/Layer/FeatureServer/0',\n *       bbox: '...',\n *       layersToShow: '0,1,2',\n *       zIndex: 2,\n *       tokenKey: 'myToken',\n *       style: myStyleFunction // or a static style object\n *     })\n *     .build();\n */\nexport class EsriFeatureConfigBuilder {\n  /**\n   * @param {Object} [initialConfig] - Optional initial configuration object.\n   */\n  constructor(initialConfig = {}) {\n    this._config = {\n      config: {\n        value: {\n          endpoints: [],\n          ...(initialConfig.config && initialConfig.config.value ? initialConfig.config.value : {})\n        },\n      },\n      key: initialConfig.key || '',\n      opacity: typeof initialConfig.opacity === 'number' ? initialConfig.opacity : 1,\n    };\n\n    // If endpoints are provided, ensure it's an array\n    if (\n      initialConfig.config &&\n      initialConfig.config.value &&\n      Array.isArray(initialConfig.config.value.endpoints)\n    ) {\n      this._config.config.value.endpoints = [...initialConfig.config.value.endpoints];\n    }\n  }\n\n  /**\n   * Set the unique key for the layer group.\n   * @param {string} key\n   */\n  setKey(key) {\n    this._config.key = key;\n    return this;\n  }\n\n  /**\n   * Set the opacity for the layer group.\n   * @param {number} opacity\n   * @throws {Error} If opacity is not a number between 0 and 1.\n   * @returns {EsriFeatureConfigBuilder} Returns the builder instance for chaining.\n   */\n  setOpacity(opacity) {\n    if (typeof opacity !== 'number' || opacity < 0 || opacity > 1) {\n      throw new Error('Opacity must be a number between 0 and 1.');\n    }\n    this._config.opacity = opacity;\n    return this;\n  }\n\n  /**\n   * Sets the name of the layer group.\n   * @param {string} name\n   * @returns {EsriFeatureConfigBuilder} Returns the builder instance for chaining.\n   */\n  setName(name) {\n    this._config.name = name;\n    return this;\n  }\n\n  /**\n   * Set the z-index for the layer group.\n   * @param {number} zIndex\n   * @throws {Error} If zIndex is not a number.\n   * @returns {EsriFeatureConfigBuilder} Returns the builder instance for chaining.\n   * */\n  setZIndex(zIndex) {\n    if (typeof zIndex !== 'number') {\n      throw new Error('Z-index must be a number.');\n    }\n    this._config.zIndex = zIndex;\n    return this;\n  }\n\n\n  /**\n   * Set whether the layer group is hidden.\n   * @param {*} hidden \n   * @returns \n   */\n  setHidden(hidden) {\n    if (typeof hidden !== 'boolean') {\n      throw new Error('Hidden must be a boolean value.');\n    }\n    this._config.hidden = hidden;\n    return this;\n  }\n\n  /**\n   * Set the extent for the layers.\n   * @param {Array<number>} extent\n   */\n  setExtent(extent) {\n    this._config.config.value.extent = extent;\n    return this;\n  }\n\n  /**\n   * Set the layerDefs for the layers.\n   * @param {Object|string} layerDefs\n   */\n  setLayerDefs(layerDefs) {\n    this._config.config.value.layerDefs = layerDefs;\n    return this;\n  }\n\n  /**\n   * Add an endpoint configuration with validation.\n   * @param {Object} endpoint\n   * @param {string} endpoint.url - ArcGIS REST endpoint URL. (required)\n   * @param {string} [endpoint.bbox] - Optional bounding box.\n   * @param {string} [endpoint.layersToShow] - Optional comma-separated list of layer IDs.\n   * @param {number} [endpoint.zIndex] - Optional z-index.\n   * @param {string} [endpoint.tokenKey] - Optional token key for authentication.\n   * @param {Function|Object} [endpoint.style] - Optional static or dynamic style.\n   * @throws {Error} If required parameters are missing or invalid.\n   */\n  addEndpoint(endpoint) {\n    // Validate required fields\n    if (!endpoint || typeof endpoint !== 'object') {\n      throw new Error('Endpoint must be an object.');\n    }\n    if (!endpoint.url || typeof endpoint.url !== 'string') {\n      throw new Error('Endpoint \"url\" is required and must be a string.');\n    }\n    // Optional: Validate types of optional fields\n    if (endpoint.bbox && typeof endpoint.bbox !== 'string') {\n      throw new Error('Endpoint \"bbox\" must be a string if provided.');\n    }\n    if (endpoint.layersToShow && typeof endpoint.layersToShow !== 'string') {\n      throw new Error('Endpoint \"layersToShow\" must be a string if provided.');\n    }\n    if (endpoint.zIndex && typeof endpoint.zIndex !== 'number') {\n      throw new Error('Endpoint \"zIndex\" must be a number if provided.');\n    }\n    if (endpoint.tokenKey && typeof endpoint.tokenKey !== 'string') {\n      throw new Error('Endpoint \"tokenKey\" must be a string if provided.');\n    }\n    // style can be a function or an object, so no strict validation\n\n    this._config.config.value.endpoints.push(endpoint);\n    return this;\n  }\n\n  /**\n   * Build and return the configuration object.\n   * @returns {Object}\n   */\n  build() {\n    return {\n      key: this._config.key,\n      opacity: this._config.opacity,\n      name: this._config.name || this._config.key,\n      zIndex: this._config.zIndex || 0,\n      hidden: this._config.hidden || false,\n      extent: this._config.config.value.extent || [-13884991, 2870341, -7455066, 6338219],\n\n      esriFeature: this._config.config.value,\n    }\n  }\n}\n\n/**\n * Builder for a single endpoint configuration for EsriFeatureConfigBuilder.\n *\n * Example usage:\n *   const endpoint = new EsriFeatureEndpointConfigBuilder()\n *     .setUrl('https://example.com/arcgis/rest/services/Layer/FeatureServer/0')\n *     .setBbox('...')\n *     .setLayersToShow('0,1,2')\n *     .setZIndex(2)\n *     .setTokenKey('myToken')\n *     .setStyle(myStyleFunction) // or a static style object\n *     .build();\n */\nexport class EsriFeatureEndpointConfigBuilder {\n  /**\n   * @param {Object} [initialEndpoint] - Optional initial endpoint configuration.\n   */\n  constructor(initialEndpoint = {}) {\n    this._endpoint = { ...initialEndpoint };\n  }\n\n  /**\n   * Set the ArcGIS REST endpoint URL (required).\n   * @param {string} url\n   */\n  setUrl(url) {\n    this._endpoint.url = url;\n    return this;\n  }\n\n  /**\n   * Set the bounding box (optional).\n   * @param {string} bbox\n   */\n  setBbox(bbox) {\n    this._endpoint.bbox = bbox;\n    return this;\n  }\n\n  /**\n   * Set the comma-separated list of layer IDs to show (optional).\n   * @param {string} layersToShow\n   */\n  setLayersToShow(layersToShow) {\n    this._endpoint.layersToShow = layersToShow;\n    return this;\n  }\n\n  /**\n   * Set the z-index for the layer (optional).\n   * @param {number} zIndex\n   */\n  setZIndex(zIndex) {\n    this._endpoint.zIndex = zIndex;\n    return this;\n  }\n\n  /**\n   * Set the token key for authentication (optional).\n   * @param {string} tokenKey\n   */\n  setTokenKey(tokenKey) {\n    this._endpoint.tokenKey = tokenKey;\n    return this;\n  }\n\n  /**\n   * Set a static or dynamic style (optional).\n   * @param {Function|Object} style\n   */\n  setStyle(style) {\n    this._endpoint.style = style;\n    return this;\n  }\n\n  /**\n   * Build and return the endpoint configuration object.\n   * @returns {Object}\n   * @throws {Error} If required parameters are missing or invalid.\n   */\n  build() {\n    if (!this._endpoint.url || typeof this._endpoint.url !== 'string') {\n      throw new Error('Endpoint \"url\" is required and must be a string.');\n    }\n    if (this._endpoint.bbox && typeof this._endpoint.bbox !== 'string') {\n      throw new Error('Endpoint \"bbox\" must be a string if provided.');\n    }\n    if (this._endpoint.layersToShow && typeof this._endpoint.layersToShow !== 'string') {\n      throw new Error('Endpoint \"layersToShow\" must be a string if provided.');\n    }\n    if (this._endpoint.zIndex && typeof this._endpoint.zIndex !== 'number') {\n      throw new Error('Endpoint \"zIndex\" must be a number if provided.');\n    }\n    if (this._endpoint.tokenKey && typeof this._endpoint.tokenKey !== 'string') {\n      throw new Error('Endpoint \"tokenKey\" must be a string if provided.');\n    }\n    // style can be a function or an object, so no strict validation\n\n    return { ...this._endpoint };\n  }\n}"],"names":["tileStrategy"],"mappings":"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"}